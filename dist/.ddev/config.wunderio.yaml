hooks:
  post-import-db:
    - exec: "/var/www/html/.ddev/wunderio/core/_run-scripts.sh hooks-db-post-import.sh"
  post-restore-snapshot:
    - exec: "/var/www/html/.ddev/wunderio/core/_run-scripts.sh hooks-db-post-import.sh"
  post-start:
    # Build hook workaround to run composer install on first start.
    # @todo We could potentially make this more like lando build hook by creating tmp files.
    - exec: "[ ! -d \"/var/www/html/vendor\" ] && /var/www/html/.ddev/wunderio/core/_run-scripts.sh hooks-web-post-start-once.sh || true"
    # Script to run on every start on the host.
    - exec-host: ".ddev/wunderio/core/_run-scripts.sh hooks-host-post-start.sh"
    # Script to run on every start.
    - exec: "/var/www/html/.ddev/wunderio/core/_run-scripts.sh hooks-web-post-start.sh"
    # Wunderio/ddev-drupal update check.
    - exec: "UPDATE_SCRIPT=\"/var/www/html/vendor/wunderio/ddev-drupal/scripts/update_check.sh\"; [ -f \"$UPDATE_SCRIPT\" ] && $UPDATE_SCRIPT || true"
web_environment:
# Both this project and wunderio/lando-drupal use the same file
# at drush/sites/local.site.yml. To make sure that the local alias
# is working, we need to set the same environment variables here.
- LANDO_WEBROOT=$DDEV_COMPOSER_ROOT/$DDEV_DOCROOT
# When Mutagen is enabled (which it is by default in DDEV v1.19+),
# these directories are bind-mounted directly rather than synced via Mutagen
# This improves performance for large file directories by bypassing Mutagen's
# syncing.
# The paths are relative to the project root.
upload_dirs:
  # Configure database_dumps directory to be bind-mounted directly
  # instead of being synced via Mutagen for better performance
  - ../database_dumps
